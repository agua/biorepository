{
   "owner" : "aguatest",
   "number" : null,
   "provenance" : "",
   "status" : "",
   "name" : "Project1",
   "duration" : "",
   "description" : "",
   "stopped" : "",
   "notes" : "",
   "started" : "",
   "workflows" : [
      {
         "owner" : "aguatest",
         "number" : "1",
         "provenance" : "",
         "status" : "",
         "project" : "Project1",
         "apps" : [
            {
               "stagepid" : "3390",
               "status" : "error",
               "workflowpid" : "0",
               "localonly" : "0",
               "ordinal" : 1,
               "url" : null,
               "stagejobid" : "0",
               "completed" : "2012-01-12 19:08:08",
               "owner" : "aguatest",
               "stderrfile" : "/nethome/aguatest/agua/Project1/Workflow1/stdout/1-FTP.stderr",
               "location" : "/agua/0.6/bioapps/bin/utils/deepvac.pl",
               "version" : "0.6.0",
               "installdir" : "/agua/0.6/t/bin/Agua/Common/Package/inputs/apps",
               "executor" : "/usr/bin/perl",
               "name" : "FTP",
               "duration" : "",
               "description" : "",
               "package" : "testapps",
               "stdoutfile" : "/nethome/aguatest/agua/Project1/Workflow1/stdout/1-FTP.stdout",
               "parameters" : [
                  {
                     "locked" : "0",
                     "value" : "",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Download only files containing this text fragment",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--filter",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "filter",
                     "param" : "filter",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "Project1/Workflow1/downloads",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Create this directory and download files to it",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--outputdir",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "directory",
                     "category" : "outputdir",
                     "param" : "outputdir",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "chr[XYM0-9]+.fa.gz",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Download files matching this regular expression",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--regex",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "regex",
                     "param" : "regex",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "html",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Type of page: html or text",
                     "discretion" : "essential",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--type",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "type",
                     "param" : "type",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "http://some.url",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Download files linked on this page",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--url",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "url",
                     "param" : "url",
                     "paramFunction" : ""
                  }
               ],
               "notes" : "",
               "type" : "utility",
               "started" : "2012-01-12 19:08:03",
               "queued" : "0000-00-00 00:00:00"
            },
            {
               "stagepid" : "0",
               "status" : "",
               "workflowpid" : "0",
               "localonly" : "0",
               "ordinal" : 2,
               "url" : null,
               "stagejobid" : "0",
               "completed" : "0000-00-00 00:00:00",
               "owner" : "aguatest",
               "stderrfile" : "",
               "location" : "/agua/0.6/bioapps/bin/utils/unzipFiles.pl",
               "version" : "0.6.0",
               "installdir" : "/agua/0.6/t/bin/Agua/Common/Package/inputs/apps",
               "executor" : "/usr/bin/perl",
               "name" : "unzipFiles",
               "duration" : "",
               "description" : "",
               "package" : "testapps",
               "stdoutfile" : "",
               "parameters" : [
                  {
                     "locked" : "0",
                     "value" : "1",
                     "args" : "",
                     "chained" : "1",
                     "description" : "Remove zipped files after unzipping",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "1",
                     "argument" : "--delete",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "flag",
                     "category" : "delete",
                     "param" : "delete",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "",
                     "args" : "",
                     "chained" : "1",
                     "description" : "Unzip only files containing this text fragment",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--filter",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "filter",
                     "param" : "filter",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "%project%/%workflow%/downloads",
                     "args" : "input.outputdir.value",
                     "chained" : "1",
                     "description" : "Name of unzip application (unzip|gunzip) (DEFAULT: gunzip)",
                     "discretion" : "essential",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--inputdir",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "directory",
                     "category" : "inputdir",
                     "param" : "inputdir",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "%project%/%workflow%/downloads",
                     "args" : "input.outputdir.value",
                     "chained" : "1",
                     "description" : "Unzip files to this directory",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--outputdir",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "directory",
                     "category" : "outputdir",
                     "param" : "outputdir",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "chr[XYM0-9]+.fa.gz",
                     "args" : "input.regex.value",
                     "chained" : "1",
                     "description" : "Unzip only files matching this regular expression",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--regex",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "filter",
                     "param" : "regex",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "gunzip",
                     "args" : "",
                     "chained" : "1",
                     "description" : "Name of unzip application (unzip|gunzip) (DEFAULT: gunzip)",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--type",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "type",
                     "param" : "type",
                     "paramFunction" : ""
                  }
               ],
               "notes" : "",
               "type" : "utility",
               "started" : "0000-00-00 00:00:00",
               "queued" : "0000-00-00 00:00:00"
            },
            {
               "stagepid" : "0",
               "status" : "",
               "workflowpid" : "0",
               "localonly" : "0",
               "ordinal" : 3,
               "url" : null,
               "stagejobid" : "0",
               "completed" : "0000-00-00 00:00:00",
               "owner" : "aguatest",
               "stderrfile" : "",
               "location" : "/agua/0.6/bioapps/bin/converters/bowtieIndex.pl",
               "version" : "0.6.0",
               "installdir" : "/agua/0.6/t/bin/Agua/Common/Package/inputs/apps",
               "executor" : "/usr/bin/perl",
               "name" : "bowtieIndex",
               "duration" : "",
               "description" : "",
               "package" : "testapps",
               "stdoutfile" : "",
               "parameters" : [
                  {
                     "locked" : "0",
                     "value" : "Project1/Workflow1/downloads",
                     "args" : "input.referencedir.value, input.outputdir.value, input.inputdir.value",
                     "chained" : "0",
                     "description" : "Location of directory containing *.fa files",
                     "discretion" : "essential",
                     "inputParams" : "refdir,outputdir,inputdir",
                     "ordinal" : "1",
                     "argument" : "--inputdir",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "directory",
                     "category" : "inputdir",
                     "param" : "inputdir",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "Project1/Workflow1/inputs",
                     "args" : "input.referencedir.value, input.outputdir.value, input.inputdir.value",
                     "chained" : "0",
                     "description" : "Print indexed files to this directory",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "1",
                     "argument" : "--outputdir",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "directory",
                     "category" : "inputdir",
                     "param" : "outputdir",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "1",
                     "value" : "1",
                     "args" : "input.subdirs.value",
                     "chained" : "0",
                     "description" : "",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "1",
                     "argument" : "--subdirs",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "flag",
                     "category" : "subdirs",
                     "param" : "subdirs",
                     "paramFunction" : ""
                  }
               ],
               "notes" : "",
               "type" : "converter",
               "started" : "0000-00-00 00:00:00",
               "queued" : "0000-00-00 00:00:00"
            },
            {
               "stagepid" : "0",
               "status" : "",
               "workflowpid" : "0",
               "localonly" : "0",
               "ordinal" : 4,
               "url" : null,
               "stagejobid" : "0",
               "completed" : "0000-00-00 00:00:00",
               "owner" : "aguatest",
               "stderrfile" : "",
               "location" : "/agua/0.6/bioapps/bin/aligners/TOPHAT.pl",
               "version" : "0.6.0",
               "installdir" : "/agua/0.6/t/bin/Agua/Common/Package/inputs/apps",
               "executor" : "/usr/bin/perl",
               "name" : "TOPHAT",
               "duration" : "",
               "description" : "",
               "package" : "testapps",
               "stdoutfile" : "",
               "parameters" : [
                  {
                     "locked" : "0",
                     "value" : "Project1/Workflow1/coverage.wig",
                     "args" : "",
                     "chained" : "0",
                     "description" : "A UCSC BedGraph wigglegram track, showing the depth of coverage at each position, including the spliced read alignments.",
                     "discretion" : "Discretion",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "",
                     "format" : "",
                     "paramtype" : "output",
                     "valuetype" : "file",
                     "category" : "coverage",
                     "param" : "coverage",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Max. number of cpus per job (1 to 4) (DEFAULT = 4)",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--cpus",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "integer",
                     "category" : "cpus",
                     "param" : "cpus",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "200",
                     "args" : "",
                     "chained" : "0",
                     "description" : "The  mean inner distance between first read and its mate pair (corresponds to -r/--mate-inner-dist argument to Tophat)",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--distance",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "integer",
                     "category" : "distance",
                     "param" : "distance",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "Project1/Workflow1/accepted_hits.sam",
                     "args" : "",
                     "chained" : "0",
                     "description" : "A list of read alignments in SAM format. SAM is a compact short read alignment format that is increasingly being adopted.",
                     "discretion" : "Discretion",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "",
                     "format" : "",
                     "paramtype" : "output",
                     "valuetype" : "file",
                     "category" : "hits",
                     "param" : "hits",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "Project1/Workflow1/yoruba1-1.reads_1.1M.sequence.txt",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Comma-separated *sequence.txt file names (e.g., s_1_1_sequence.txt,s_2_1_sequence.txt)",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--inputfiles",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "file",
                     "category" : "inputfiles",
                     "param" : "inputfiles",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Max. number of concurrent cluster jobs (DEFAULT = 30)",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--jobs",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "integer",
                     "category" : "jobs",
                     "param" : "jobs",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "Project1/Workflow1/junctions.bed",
                     "args" : "",
                     "chained" : "0",
                     "description" : "A UCSC BED track of junctions reported by TopHat. Each junction consists of two connected BED blocks, where each block is as long as the maximal overhang of any read spanning the junction. The score is the number of alignments spanning the junction.",
                     "discretion" : "Discretion",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "",
                     "format" : "",
                     "paramtype" : "output",
                     "valuetype" : "file",
                     "category" : "junctions",
                     "param" : "junctions",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Keep intermediate files",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--keep",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "flag",
                     "category" : "keep",
                     "param" : "keep",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "bowtie-0",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Name to used to submit jobs to cluster (e.g., tophat-sample1)",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--label",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "label",
                     "param" : "label",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Comma-separated *sequence.txt mate file names (e.g., s_1_2_sequence.txt,s_2_2_sequence.txt) with locations as paths relative to the output directory",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--matefiles",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "file",
                     "category" : "matefiles",
                     "param" : "matefiles",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "Project1/Workflow1",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Create this directory and write output files to it",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--outputdir",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "directory",
                     "category" : "outputdir",
                     "param" : "outputdir",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "Project1/Workflow1/out.sam",
                     "args" : "",
                     "chained" : "0",
                     "description" : "SAM file containing",
                     "discretion" : "Discretion",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "",
                     "format" : "sam",
                     "paramtype" : "output",
                     "valuetype" : "file",
                     "category" : "outputfile",
                     "param" : "outputfile",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Additional parameters to be passed to tophat (e.g., --solexa1.3-quals",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--params",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "params",
                     "param" : "params",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Cluster queue options",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--queue",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "queue",
                     "param" : "queue",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "Project1/Workflow1/chr22/chr22.1.ebwt",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Location of indexed reference file  (NB: Use file stub, e.g., /some/path/hg19)",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--reference",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "file",
                     "category" : "reference",
                     "param" : "reference",
                     "paramFunction" : ""
                  }
               ],
               "notes" : "",
               "type" : "expression",
               "started" : "0000-00-00 00:00:00",
               "queued" : "0000-00-00 00:00:00"
            }
         ],
         "name" : "Workflow1",
         "duration" : "",
         "description" : "",
         "stopped" : "",
         "notes" : "",
         "started" : ""
      },
      {
         "owner" : "aguatest",
         "number" : "2",
         "provenance" : "",
         "status" : "",
         "project" : "Project1",
         "apps" : [
            {
               "stagepid" : "0",
               "status" : "",
               "workflowpid" : "0",
               "localonly" : "0",
               "ordinal" : 1,
               "url" : null,
               "stagejobid" : "0",
               "completed" : "0000-00-00 00:00:00",
               "owner" : "aguatest",
               "stderrfile" : "",
               "location" : "/agua/0.6/bioapps/bin/utils/deepvac.pl",
               "version" : "0.6.0",
               "installdir" : "/agua/0.6/t/bin/Agua/Common/Package/inputs/apps",
               "executor" : "/usr/bin/perl",
               "name" : "FTP",
               "duration" : "",
               "description" : "",
               "package" : "testapps",
               "stdoutfile" : "",
               "parameters" : [
                  {
                     "locked" : "0",
                     "value" : "",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Download only files containing this text fragment",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--filter",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "filter",
                     "param" : "filter",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "Project1/Workflow2/downloads",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Create this directory and download files to it",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--outputdir",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "directory",
                     "category" : "outputdir",
                     "param" : "outputdir",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "chr[XYM0-9]+.fa.gz",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Download files matching this regular expression",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--regex",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "regex",
                     "param" : "regex",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "html",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Type of page: html or text",
                     "discretion" : "essential",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--type",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "type",
                     "param" : "type",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "ftp://some/ftp/url",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Download files linked on this page",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--url",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "url",
                     "param" : "url",
                     "paramFunction" : ""
                  }
               ],
               "notes" : "",
               "type" : "utility",
               "started" : "0000-00-00 00:00:00",
               "queued" : "0000-00-00 00:00:00"
            },
            {
               "stagepid" : "0",
               "status" : "",
               "workflowpid" : "0",
               "localonly" : "0",
               "ordinal" : 2,
               "url" : null,
               "stagejobid" : "0",
               "completed" : "0000-00-00 00:00:00",
               "owner" : "aguatest",
               "stderrfile" : "",
               "location" : "/agua/0.6/bioapps/bin/utils/unzipFiles.pl",
               "version" : "0.6.0",
               "installdir" : "/agua/0.6/t/bin/Agua/Common/Package/inputs/apps",
               "executor" : "/usr/bin/perl",
               "name" : "unzipFiles",
               "duration" : "",
               "description" : "",
               "package" : "testapps",
               "stdoutfile" : "",
               "parameters" : [
                  {
                     "locked" : "0",
                     "value" : "1",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Remove zipped files after unzipping",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "1",
                     "argument" : "--delete",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "flag",
                     "category" : "delete",
                     "param" : "delete",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Unzip only files containing this text fragment",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--filter",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "filter",
                     "param" : "filter",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "%project%/%workflow%/downloads",
                     "args" : "input.outputdir.value",
                     "chained" : "1",
                     "description" : "Name of unzip application (unzip|gunzip) (DEFAULT: gunzip)",
                     "discretion" : "essential",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--inputdir",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "directory",
                     "category" : "inputdir",
                     "param" : "inputdir",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "%project%/%workflow%/downloads",
                     "args" : "input.outputdir.value",
                     "chained" : "1",
                     "description" : "Unzip files to this directory",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--outputdir",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "directory",
                     "category" : "outputdir",
                     "param" : "outputdir",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "chr[XYM0-9]+.fa.gz",
                     "args" : "input.regex.value",
                     "chained" : "1",
                     "description" : "Unzip only files matching this regular expression",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--regex",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "filter",
                     "param" : "regex",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "0",
                     "value" : "gunzip",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Name of unzip application (unzip|gunzip) (DEFAULT: gunzip)",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--type",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "type",
                     "param" : "type",
                     "paramFunction" : ""
                  }
               ],
               "notes" : "",
               "type" : "utility",
               "started" : "0000-00-00 00:00:00",
               "queued" : "0000-00-00 00:00:00"
            },
            {
               "stagepid" : "0",
               "status" : "",
               "workflowpid" : "0",
               "localonly" : "0",
               "ordinal" : 3,
               "url" : null,
               "stagejobid" : "0",
               "completed" : "0000-00-00 00:00:00",
               "owner" : "aguatest",
               "stderrfile" : "",
               "location" : "/agua/0.6/bioapps/bin/aligners/elandHeader.pl",
               "version" : "0.6.0",
               "installdir" : "/agua/0.6/t/bin/Agua/Common/Package/inputs/apps",
               "executor" : "/usr/bin/perl",
               "name" : "elandHeader",
               "duration" : "",
               "description" : "",
               "package" : "testapps",
               "stdoutfile" : "",
               "parameters" : [
                  {
                     "locked" : "0",
                     "value" : "Project1/Workflow2/sequence.txt",
                     "args" : "output.outputfile.value",
                     "chained" : "0",
                     "description" : "FASTQ file not in ELAND format (for use with ELAND_standalone.pl)",
                     "discretion" : "essential",
                     "inputParams" : "",
                     "ordinal" : "0",
                     "argument" : "--inputfile",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "file",
                     "category" : "readfile ",
                     "param" : "inputfile",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "1",
                     "value" : "myLabel",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Add this to the filenames of the converted files to identify the experiment/data test this",
                     "discretion" : "required",
                     "inputParams" : "",
                     "ordinal" : "1",
                     "argument" : "--label",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "string",
                     "category" : "label",
                     "param" : "label",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "1",
                     "value" : "",
                     "args" : "",
                     "chained" : "0",
                     "description" : "Complementary FASTQ reads file for input files ",
                     "discretion" : "",
                     "inputParams" : "",
                     "ordinal" : "1",
                     "argument" : "--matefile",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "file",
                     "category" : "matefile",
                     "param" : "matefile",
                     "paramFunction" : ""
                  },
                  {
                     "locked" : "1",
                     "value" : "",
                     "args" : "input.matefile.value,input.label.value",
                     "chained" : "0",
                     "description" : "Converted (ELAND_standalone.pl-compliant) complementary FASTQ reads file for input files ",
                     "discretion" : "",
                     "inputParams" : "file,label",
                     "ordinal" : "1",
                     "argument" : "--matefile",
                     "format" : "",
                     "paramtype" : "output",
                     "valuetype" : "file",
                     "category" : "matefile",
                     "param" : "matefile",
                     "paramFunction" : "console.log(file:  + file); console.log(label:  + label); if ( ! file ) return; var suffix; if ( file.match(/(.[^.]{1,5})$/) ) suffix = file.match(/(.[^.]{1,5})$/)[1]; console.log(suffix:  + suffix); file = file.replace(/.[^.]{1,5}$/, ''); if ( label != null) file += . + label; if ( suffix != null ) file += suffix; console.log(Returning file:  + file);   return file;"
                  },
                  {
                     "locked" : "0",
                     "value" : "%project%/%workflow%/sequence.myLabel.txt",
                     "args" : "file,label",
                     "chained" : "0",
                     "description" : "input.inputfile.value,input.label.value",
                     "discretion" : "",
                     "inputParams" : "console.log(file:  + file); console.log(label:  + label); if ( file == null || file == ) return; var suffix; if ( file.match(/(.[^.]{1,5})$/) ) suffix = file.match(/(.[^.]{1,5})$/)[1]; console.log(suffix:  + suffix); file = file.replace(/.[^.]{1,5}$/, ); if ( label != null) file += . + label; if ( suffix != null ) file += suffix; console.log(Returning file:  + file); return file;",
                     "ordinal" : "1",
                     "argument" : "",
                     "format" : "",
                     "paramtype" : "output",
                     "valuetype" : "file",
                     "category" : "readfile",
                     "param" : "readfile",
                     "paramFunction" : "1"
                  }
               ],
               "notes" : "",
               "type" : "converter",
               "started" : "0000-00-00 00:00:00",
               "queued" : "0000-00-00 00:00:00"
            },
            {
               "stagepid" : "0",
               "status" : "",
               "workflowpid" : "0",
               "localonly" : "0",
               "ordinal" : 4,
               "url" : null,
               "stagejobid" : "0",
               "completed" : "0000-00-00 00:00:00",
               "owner" : "aguatest",
               "stderrfile" : "",
               "location" : "/agua/0.6/bioapps/bin/converters/elandIndex.pl",
               "version" : "0.6.0",
               "installdir" : "/agua/0.6/t/bin/Agua/Common/Package/inputs/apps",
               "executor" : "/usr/bin/perl",
               "name" : "elandIndex",
               "duration" : "",
               "description" : "",
               "package" : "testapps",
               "stdoutfile" : "",
               "parameters" : [
                  {
                     "locked" : "0",
                     "value" : "Project1/Workflow2/reference/fasta",
                     "args" : "input.referencedir.value,input.outputdir.value,input.inputdir.value",
                     "chained" : "0",
                     "description" : "Location of directory containing *.fa files",
                     "discretion" : "essential",
                     "inputParams" : "referencedir,outputdir,inputdir",
                     "ordinal" : "0",
                     "argument" : "--inputdir",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "directory",
                     "category" : "inputdir",
                     "param" : "inputdir",
                     "paramFunction" : "if ( !referencedir ) return referencedir; if ( ! outputdir ) return outputdir; if ( ! inputdir ) return inputdir; "
                  },
                  {
                     "locked" : "0",
                     "value" : "Project1/Workflow2/reference/eland",
                     "args" : "input.referencedir.value,input.outputdir.value,input.inputdir.value",
                     "chained" : "0",
                     "description" : "Print indexed files to this directory",
                     "discretion" : "essential",
                     "inputParams" : "referencedir,outputdir,inputdir",
                     "ordinal" : "1",
                     "argument" : "--outputdir",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "directory",
                     "category" : "outputdir",
                     "param" : "outputdir",
                     "paramFunction" : "if ( !referencedir ) return referencedir; if ( ! outputdir ) return outputdir; if ( ! inputdir ) return inputdir; "
                  },
                  {
                     "locked" : "0",
                     "value" : "",
                     "args" : "input.subdirs.value",
                     "chained" : "0",
                     "description" : "",
                     "discretion" : "optional",
                     "inputParams" : "",
                     "ordinal" : "1",
                     "argument" : "--subdirs",
                     "format" : "",
                     "paramtype" : "input",
                     "valuetype" : "flag",
                     "category" : "subdirs",
                     "param" : "subdirs",
                     "paramFunction" : ""
                  }
               ],
               "notes" : "",
               "type" : "converter",
               "started" : "0000-00-00 00:00:00",
               "queued" : "0000-00-00 00:00:00"
            }
         ],
         "name" : "Workflow2",
         "duration" : "",
         "description" : "",
         "stopped" : "",
         "notes" : "",
         "started" : ""
      }
   ]
}

